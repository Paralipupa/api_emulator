routes:
  - path: /oauth
    methods:
      - method: GET
        request_schema:
          type: object
          properties:
            response_type:
              type: string
              enum: [code]
              description: "Тип запрашиваемого гранта"
            client_id:
              type: string
              description: "Идентификатор клиента"
            scope:
              type: string
              description: "Запрашиваемые методы"
            state:
              type: string
              description: "Код статуса"
          required: [response_type, client_id, scope]
        response:
          status: success
        redirect:
          enabled: true
          url: "http://eth0.me"
          parameters:
            - name: "code"
              value: "{code}"
            - name: "state"
              value: "{state}"

  - path: /token
    methods:
      - method: POST
        content_type: application/x-www-form-urlencoded
        request_schema:
          type: object
          properties:
            grant_type:
              type: string
              enum: [authorization_code, refresh_token]
              description: "Тип запрашиваемого гранта"
            client_id:
              type: string
              description: "Идентификатор клиента"
            client_secret:
              type: string
              description: "Секретный ключ клиента"
            code:
              type: string
              description: "Код авторизации (требуется для grant_type=authorization_code)"
            refresh_token:
              type: string
              description: "Токен обновления (требуется для grant_type=refresh_token)"
          required: [grant_type, client_id, client_secret]
          allOf:
            - if:
                properties:
                  grant_type:
                    const: authorization_code
              then:
                required: [code]
            - if:
                properties:
                  grant_type:
                    const: refresh_token
              then:
                required: [refresh_token]
        response:
          access_token: "{$access_token}"
          expires_in: 86400
          refresh_token: "{$refresh_token}"
          scope: "messenger:read,messenger:write"
          token_type: "Bearer"

  
